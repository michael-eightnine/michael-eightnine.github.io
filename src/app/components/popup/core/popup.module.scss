@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.popup {
  background-color: var(--color--white);
  border: 1px solid var(--color--blue);
  overflow: hidden;
  box-shadow: none;
  display: flex;
  flex-direction: column;
  position: absolute;

  &::after {
    content: '';
    pointer-events: none;
    background-color: var(--color--blue);
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: block;
    transition: opacity var(--transition--fast) ease;
  }

  &__closing,
  &__opening,
  &__closed {
    pointer-events: none;
  }

  &__closing,
  &__closed {
    &::after {
      opacity: 1;
    }
  }

  &__closing {
    animation: fadeOut var(--transition--standard) ease forwards;
    animation-delay: 0.35s;
  }

  &__closed {
    opacity: 0;
  }

  &__opening,
  &__open {
    box-shadow: 3px 3px 5px 2px rgba(0, 0, 0, 0.25);

    &::after {
      opacity: 0;
      transition-delay: var(--transition--slow);
    }
  }

  &__dragging {
    // Overrides inline styles applied by transition JS. Without this override we'd have to store the previous
    // transition styling in state, which changes based on opening or closing. !important is a bit of a red flag but
    // if I say sorry enough I'm sure it's ok, right?
    transition: none !important;
    box-shadow: 3px 3px 7px 4px rgba(0, 0, 0, 0.35);
  }
}

.header {
  border-bottom: 1px solid var(--color--blue);
  background-color: var(--color--offwhite);
  font-family: var(--font--mono);
  text-transform: uppercase;
  color: var(--color--blue);
  display: flex;
  width: 100%;
  align-items: stretch;
  font-weight: bold;

  span {
    font-size: 1.25rem;
    letter-spacing: 0.045em;
    align-self: center;
    margin-left: 1rem;
  }

  button {
    color: var(--color--blue);
    line-height: 0.5;
    padding: 0.5rem;
    margin-left: auto;
    border-left: 1px solid var(--color--blue);
    border-top: none;
    border-right: none;
    height: 45px;
    width: 45px;
    flex: none;
    display: flex;
    justify-content: center;
    align-items: stretch;
    transition: background-color var(--transition--standard) ease;

    @media (hover: hover) {
      &:hover,
      &:focus-visible {
        background-color: var(--color--white);
      }
    }
  }
}

.headerIconContainer {
  padding: 0;
  height: 45px;
  width: 45px;
  flex: none;
  cursor: grab;

  &__dragging {
    cursor: grabbing;

    .headerIcon {
      background-color: color-mix(in srgb, var(--color--blue) 90%, black 15%);
    }
  }
}

.headerIcon {
  background-color: var(--color--blue);
  color: var(--color--white);
  padding: 0.25rem;
  transition: background-color var(--transition--fast) ease;
}

.contentContainer {
  flex: 1 1 100%;
  overflow: hidden;
  overflow: auto;

  hr {
    background: var(--color--blue);
  }
}

.content {
  padding: var(--padding--small);
  font-size: 1rem;
  line-height: 1.5;
  color: var(--color--black);
  font-family: var(--font--serif);

  & + & {
    padding-top: 0;
  }

  h4 {
    text-transform: uppercase;
    padding: 0.25rem;
    font-size: 0.875rem;
    letter-spacing: 0.1rem;
    color: var(--color--white);
    background-color: var(--color--blue);
    display: inline-block;
    line-height: 1;
    margin-left: 0.5rem;
    margin-bottom: 0.5rem;
  }

  ul {
    font-size: 1rem;
    font-family: var(--font--mono);
  }

  li {
    position: relative;
    padding-left: 1.5rem;
    line-height: 1.25;

    &::before {
      content: '';
      display: block;
      height: 0.25rem;
      width: 0.25rem;
      background-color: var(--color--blue);
      top: 0.55rem;
      left: 0.5rem;
      position: absolute;
    }

    & + li {
      margin-top: 0.75rem;
    }

    span {
      min-width: 7rem;
      display: inline-block;
    }

    @media screen and (max-width: 600px) {
      span {
        min-width: 6rem;
        display: inline-block;
      }
    }
  }

  a,
  a:visited {
    text-decoration: none;
    color: var(--color--blue);
  }

  a:hover {
    text-decoration: underline;
  }
}
